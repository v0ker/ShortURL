// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"ShortURL/internal/api/handler"
	"ShortURL/internal/api/middleware"
	"ShortURL/internal/api/router"
	"ShortURL/internal/config"
	"ShortURL/internal/data"
	"github.com/natefinch/lumberjack"
	"go.uber.org/zap"
)

// Injectors from wire.go:

// wireApp init application.
func wireApp(configuration *config.Configuration, lumberjackLogger *lumberjack.Logger, zapLogger *zap.Logger) (*App, func(), error) {
	recovery := middleware.NewRecovery(lumberjackLogger, zapLogger)
	dataData, cleanup, err := data.NewData(configuration, zapLogger)
	if err != nil {
		return nil, nil, err
	}
	echoData := data.NewEchoData(dataData, zapLogger)
	userHandler := handler.NewUserHandler(echoData, zapLogger)
	engine := router.NewRouter(configuration, recovery, userHandler)
	server := newHttpServer(configuration, engine)
	app := newApp(configuration, zapLogger, server)
	return app, func() {
		cleanup()
	}, nil
}
